pipeline {
    agent any  // This specifies the pipeline to run on any available agent (node)

    environment {
        // Set environment variables here if needed
        MY_ENV_VAR = 'SomeValue'
    }

    tools {
        // Define tools that should be available in the pipeline (e.g., JDK, Maven, NodeJS)
        jdk 'jdk11'  // Example for JDK 11, ensure it is defined in Jenkins global tool configuration
        maven 'Maven-3.8.1'  // Example for Maven, define it in Jenkins global tool configuration
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the repository from SCM
                git 'https://github.com/your-repository/project.git'
            }
        }

        stage('Build') {
            steps {
                // Run build steps, e.g., Maven, Gradle, npm, etc.
                echo "Building the project..."
                sh 'mvn clean install'  // Example for Maven build
            }
        }

        stage('Test') {
            steps {
                // Run tests, for example with Maven, Gradle, etc.
                echo "Running tests..."
                sh 'mvn test'  // Example for Maven tests
            }
            post {
                always {
                    // Archive test results regardless of success or failure
                    junit '**/target/test-*.xml'  // Example for JUnit test results
                }
            }
        }

        stage('Static Analysis') {
            steps {
                // Perform static code analysis
                echo "Running static code analysis..."
                sh 'mvn pmd:pmd'  // Example for PMD static analysis (if using Maven)
            }
        }

        stage('Deploy') {
            steps {
                // Deploy the application (e.g., to a staging server, AWS, Kubernetes, etc.)
                echo "Deploying application..."
                sh './deploy.sh'  // Example for a deploy script
            }
        }

        stage('Approval') {
            steps {
                // Manual approval for production deployment
                input message: 'Approve deployment to production?', ok: 'Deploy'
            }
        }

        stage('Production Deployment') {
            when {
                branch 'main'  // Only run this stage when deploying from the 'main' branch
            }
            steps {
                // Production deployment steps (e.g., to live environment)
                echo "Deploying to production..."
                sh './deploy-prod.sh'  // Example for production deploy script
            }
        }
    }

    post {
        always {
            // Actions to take always after the pipeline completes (e.g., cleanup)
            echo 'Cleaning up...'
        }

        success {
            // Actions to take when the pipeline is successful
            echo 'Pipeline completed successfully!'
        }

        failure {
            // Actions to take when the pipeline fails
            echo 'Pipeline failed. Please investigate.'
        }
    }
}
